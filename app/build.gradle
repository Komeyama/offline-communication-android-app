apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.android.application'

apply plugin: 'androidx.navigation.safeargs.kotlin'

apply plugin: 'com.cookpad.android.licensetools'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.komeyama.offline.chat"
        minSdkVersion 25
        targetSdkVersion 29
        versionCode 2
        versionName "1.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin_version}"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // JetPack
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle_version}"
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.nav_version}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.nav_version}"

    // Dagger
    implementation "com.google.dagger:dagger:${versions.dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger_version}"

    // Room
    implementation "androidx.room:room-runtime:${versions.room_version}"
    kapt "androidx.room:room-compiler:${versions.room_version}"

    // RxJava2
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava2_version}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxjava2_android_version}"

    // Stetho Sqlite (Room Debugging tool)
    debugImplementation "com.facebook.stetho:stetho:${versions.stetho_version}"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:${versions.stetho_version}"

    // Permissions Dispatcher
    implementation "com.github.hotchemi:permissionsdispatcher:${versions.permission_version}"
    kapt "com.github.hotchemi:permissionsdispatcher-processor:${versions.permission_version}"

    // Nearby
    implementation "com.google.android.gms:play-services-nearby:${versions.nearby_version}"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:${versions.moshi_version}"

    // Timber
    implementation "com.jakewharton.timber:timber:${versions.timber_version}"

    // ChatKit
    implementation "com.github.stfalcon:chatkit:${versions.chatkit_version}"

    // test
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'org.robolectric:robolectric:4.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "android.arch.persistence.room:testing:${versions.room_version}" // Room
    androidTestImplementation "org.mockito:mockito-core:${versions.mockito_version}" // mockito
    androidTestImplementation "org.powermock:powermock-api-mockito2:${versions.powermockversion}"  // power mock
    androidTestImplementation "org.powermock:powermock-module-junit4:${versions.powermockversion}" // power mock
    kaptAndroidTest "com.google.dagger:dagger-compiler:${versions.dagger_version}"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.1.0'// Dagger
}
